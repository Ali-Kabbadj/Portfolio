// @ts-nocheck
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/dot-notation */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 .\Avatar.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Avatar(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/Avatar.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  React.useEffect(() => {
    actions['LookingArround'].play()
  }, [actions])
  return (
    <group ref={group} {...props} dispose={null} position={[0, -1, 1]}>
      <group name="Scene">
        <group name="Avatar">
          <primitive object={nodes.Hips} />
          <group name="body">
            <skinnedMesh name="avaturn_shoes_0" geometry={nodes.avaturn_shoes_0.geometry} material={materials.avaturn_shoes_0_material} skeleton={nodes.avaturn_shoes_0.skeleton} />
            <skinnedMesh name="avaturn_shoes_0_1" geometry={nodes.avaturn_shoes_0_1.geometry} material={materials.avaturn_body_material} skeleton={nodes.avaturn_shoes_0_1.skeleton} />
            <skinnedMesh name="avaturn_shoes_0_2" geometry={nodes.avaturn_shoes_0_2.geometry} material={materials.avaturn_glasses_0_material} skeleton={nodes.avaturn_shoes_0_2.skeleton} />
            <skinnedMesh name="avaturn_shoes_0_3" geometry={nodes.avaturn_shoes_0_3.geometry} material={materials.avaturn_glasses_1_material} skeleton={nodes.avaturn_shoes_0_3.skeleton} />
            <skinnedMesh name="avaturn_shoes_0_4" geometry={nodes.avaturn_shoes_0_4.geometry} material={materials.avaturn_look_0_material} skeleton={nodes.avaturn_shoes_0_4.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Avatar.glb')
