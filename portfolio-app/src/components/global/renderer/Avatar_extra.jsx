/* eslint-disable @typescript-eslint/dot-notation */
// @ts-nocheck
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 .\Avatar.glb 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGraph, useThree, useFrame } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
    const groupAvatar = useRef()
  const groupChair = useRef()
  const groupPC = useRef()
  const { scene, animations } = useGLTF('/models/Avatar_extra.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions: actionsAvatar } = useAnimations(animations, groupAvatar)
  const { actions: actionsPC } = useAnimations(animations, groupPC)
  const { actions: actionsChair } = useAnimations(animations, groupChair)
  const [currentAnimationAvatar, setCurrentAnimationAvatar] = useState('idle')
  const [currentAnimationPC, setCurrentAnimationPC] = useState('idle')
  const [currentAnimationChair] = useState('idle')
  const { raycaster, camera, mouse } = useThree()

  useEffect(() => {
    if (groupAvatar.current && actionsAvatar) {
      const action = actionsAvatar[currentAnimationAvatar]
      if (action) {
        action.reset().play()
        return () => action.fadeOut(0.2)
      }
    }
  }, [actionsAvatar, currentAnimationAvatar])

  useEffect(() => {
    if ((groupPC.current && actionsPC) || (groupChair.current && actionsChair)) {
      const action = actionsPC[currentAnimationPC]
      if (action) {
        action.reset().fadeIn(0.2).play()
        return () => action.fadeOut(0.2)
      }
    }
  }, [actionsPC, currentAnimationPC,actionsChair, currentAnimationChair])

  useFrame(() => {
    raycaster.setFromCamera(mouse, camera)
    if (groupAvatar.current) {
      const intersectsAvatar = raycaster.intersectObject(groupAvatar.current, true)
      if (intersectsAvatar.length > 0) {
        const intersectedMesh = intersectsAvatar[0].object
        if (["Wolf3D_Head", "Wolf3D_Outfit_Top", "Wolf3D_Outfit_Bottom", "Wolf3D_Outfit_Footwear"].includes(intersectedMesh.name)) {
          setCurrentAnimationAvatar('looking')
        }
      } else {
        setCurrentAnimationAvatar('idle')
      }
    }
    if (groupPC.current || groupChair.current) {
      const intersectsPC = raycaster.intersectObject(groupPC.current, true)
      const intersectsChair = raycaster.intersectObject(groupChair.current, true)
      if (intersectsPC.length > 0 || intersectsChair.length > 0) {
        setCurrentAnimationPC('MacbookAnimation')
      } else {
        setCurrentAnimationPC('idle')
      }
    }

  })

    return (
        <group {...props} dispose={null}>
            <group name="Scene">
                <group ref={groupAvatar} name="Main-Armature">
                    <primitive object={nodes.Hips} />
                    <skinnedMesh
                        name="Wolf3D_Body"
                        geometry={nodes.Wolf3D_Body.geometry}
                        material={materials['Wolf3D_Body.001']}
                        skeleton={nodes.Wolf3D_Body.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Bottom"
                        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                        material={materials['Wolf3D_Outfit_Bottom.001']}
                        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Footwear"
                        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                        material={materials['Wolf3D_Outfit_Footwear.001']}
                        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Top"
                        geometry={nodes.Wolf3D_Outfit_Top.geometry}
                        material={materials['Wolf3D_Outfit_Top.001']}
                        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
                    />
                    <skinnedMesh
                        name="EyeLeft"
                        geometry={nodes.EyeLeft.geometry}
                        material={materials['Wolf3D_Eye.001']}
                        skeleton={nodes.EyeLeft.skeleton}
                        morphTargetDictionary={
                            nodes.EyeLeft.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.EyeLeft.morphTargetInfluences
                        }
                    />
                    <skinnedMesh
                        name="EyeRight"
                        geometry={nodes.EyeRight.geometry}
                        material={materials['Wolf3D_Eye.001']}
                        skeleton={nodes.EyeRight.skeleton}
                        morphTargetDictionary={
                            nodes.EyeRight.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.EyeRight.morphTargetInfluences
                        }
                    />
                    <skinnedMesh
                        name="Wolf3D_Head"
                        geometry={nodes.Wolf3D_Head.geometry}
                        material={materials['Wolf3D_Skin.001']}
                        skeleton={nodes.Wolf3D_Head.skeleton}
                        morphTargetDictionary={
                            nodes.Wolf3D_Head.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.Wolf3D_Head.morphTargetInfluences
                        }
                    />
                    <skinnedMesh
                        name="Wolf3D_Teeth"
                        geometry={nodes.Wolf3D_Teeth.geometry}
                        material={materials['Wolf3D_Teeth.001']}
                        skeleton={nodes.Wolf3D_Teeth.skeleton}
                        morphTargetDictionary={
                            nodes.Wolf3D_Teeth.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.Wolf3D_Teeth.morphTargetInfluences
                        }
                    />
                </group>
                <group
                    ref={groupPC}
                    name="Macbook_prolaptop"
                    position={[-0.537, 0.471, -0.49]}
                    rotation={[Math.PI, -0.665, Math.PI]}
                    scale={0.52}
                >
                    <group
                        name="Empty001"
                        position={[0, 0.027, -0.28]}
                        rotation={[-0.263, 0, 0]}
                        scale={0.259}
                    >
                        <group
                            name="Cube001"
                            position={[0.001, -0.051, -0.002]}
                            rotation={[1.572, 0, 0]}
                            scale={1.06}
                        >
                            <mesh
                                name="Cube097"
                                geometry={nodes.Cube097.geometry}
                                material={materials.screen}
                            />
                            <mesh
                                name="Cube097_1"
                                geometry={nodes.Cube097_1.geometry}
                                material={materials.PaletteMaterial006}
                            />
                            <mesh
                                name="Cube097_2"
                                geometry={nodes.Cube097_2.geometry}
                                material={materials.PaletteMaterial008}
                            />
                            <mesh
                                name="Cube097_3"
                                geometry={nodes.Cube097_3.geometry}
                                material={materials['Apple-logo']}
                            />
                            <mesh
                                name="Cube097_4"
                                geometry={nodes.Cube097_4.geometry}
                                material={materials.PaletteMaterial001}
                            />
                            <mesh
                                name="Cube097_5"
                                geometry={nodes.Cube097_5.geometry}
                                material={materials.PaletteMaterial003}
                            />
                            <mesh
                                name="Cube097_6"
                                geometry={nodes.Cube097_6.geometry}
                                material={materials.PaletteMaterial007}
                            />
                        </group>
                    </group>
                    <group
                        name="Cube"
                        position={[0, 0.017, -0.003]}
                        rotation={[-0.016, 0, 0]}
                        scale={0.274}
                    >
                        <mesh
                            name="Cube098"
                            geometry={nodes.Cube098.geometry}
                            material={materials.PaletteMaterial002}
                        />
                        <mesh
                            name="Cube098_1"
                            geometry={nodes.Cube098_1.geometry}
                            material={materials.PaletteMaterial001}
                        />
                        <mesh
                            name="Cube098_2"
                            geometry={nodes.Cube098_2.geometry}
                            material={materials.PaletteMaterial003}
                        />
                    </group>
                    <group
                        name="Cube003"
                        position={[0.006, 0.027, -0.093]}
                        scale={0.259}
                    >
                        <mesh
                            name="Cube095"
                            geometry={nodes.Cube095.geometry}
                            material={materials['key.002']}
                        />
                        <mesh
                            name="Cube095_1"
                            geometry={nodes.Cube095_1.geometry}
                            material={materials.PaletteMaterial004}
                        />
                    </group>
                    <mesh
                        name="Cube004"
                        geometry={nodes.Cube004.geometry}
                        material={materials.PaletteMaterial005}
                        position={[-0.393, 0.019, -0.222]}
                        rotation={[0.001, 0, 0]}
                        scale={[0.006, 0.004, 0.008]}
                    />
                </group>
                <group
                    ref={groupChair}
                    name="Renna_Office_Chair"
                    position={[-0.58, 0, -0.535]}
                    rotation={[0, 0.601, 0]}
                >
                    <mesh
                        name="caps"
                        geometry={nodes.caps.geometry}
                        material={materials.PaletteMaterial003}
                    />
                    <mesh
                        name="fabric"
                        geometry={nodes.fabric.geometry}
                        material={materials['Emerald green']}
                    />
                    <mesh
                        name="metal"
                        geometry={nodes.metal.geometry}
                        material={materials['Sandblasted black metal']}
                    />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/Avatar_extra.glb')
